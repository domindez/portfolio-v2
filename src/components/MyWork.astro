---
import { Image } from 'astro:assets'
import SectionTitle from './SectionTitle.astro'

// 1280x691
const works = [
	{
		link: 'https://www.zerobil.com',
		img: '/works/zerobil.webp',
		title: 'Zerobil',
		description: 'Una plataforma de facturación, CRM y contabilidad para autónomos y pequeñas empresas.',
		stack: ['next', 'react', 'mongo', 'ts', 'openai'],
	},
	{
		link: 'https://barmanager.app',
		img: '/works/barmanager.webp',
		title: 'Barmanager.app',
		description:
			'Una plataforma web para gestionar bares y restaurantes. Cuenta con una integración de Stripe para pagos, sistema de reservas y pedidos a domicilio.',
		stack: ['next', 'react', 'firebase', 'mongo', 'ts', 'azure'],
	},
	{
		link: 'https://roadhousegroup.com/es',
		img: '/works/roadhouse.webp',
		title: 'Grupo RoadHouse',
		description:
			'La web del Grupo RoadHouse y de sus restaurantes, con menús digitales e integración de reservas y delivery.',
		stack: ['react', 'ts', 'next', 'css', 'stripe'],
	},
	{
		link: 'https://www.seixis.es/',
		img: '/works/seixis.webp',
		title: 'Seixis',
		description: 'La web de Seixis, las cheescakes más virales de España. Con integración de pedidos a domicilio.',
		stack: ['react', 'ts', 'css'],
	},
	{
		link: 'https://trivify.es',
		img: '/works/trivify.webp',
		title: 'Trivify.es',
		description:
			'La web de Trivify con integración de email marketin y el CRM propio para la creación de juegos con Electron.',
		stack: ['react', 'js', 'mongo', 'electron', 'express'],
	},
	{
		link: 'https://www.asadorovidio.es/',
		img: '/works/ovidio.webp',
		title: 'Asador Ovidio',
		description: 'La web del prestigioso Asador Ovidio. Con integración de menú digital propio y sistema de reservas.',
		stack: ['react', 'ts', 'css'],
	},
	{
		link: 'https://gottangrill.com',
		img: '/works/gottan.webp',
		title: 'Gottan.com',
		description: 'La web de Gottan Grill. Hamburguesería galardonada con la mejor burger de España y Europa en 2024',
		stack: ['react', 'ts', 'css'],
	},
	{
		link: 'https://mariacontreraspsicologa.com/',
		img: '/works/mariacontreras.webp',
		title: 'María Contreras Psicóloga',
		description: 'La web de la psicóloga María Contreras.',
		stack: ['astro', 'ts', 'css'],
	},
	{
		link: 'https://hotelnogalera.com/',
		img: '/works/nogalera.webp',
		title: 'Hotel Nogalera',
		description: 'La web del Hotel Nogalera, con integración de un sistema de reservas.',
		stack: ['astro', 'ts', 'css'],
	},
	{
		link: 'https://trivify.es/cartasqr/bsmash',
		img: '/works/cartas-qr.webp',
		title: 'Cartas QR',
		description: 'La plataforma de cartas digitales de Trivify. Con mantenimiento de productos y categorías.',
		stack: ['react', 'ts', 'mongo', 'express', 'firebase'],
	},
	// {
	// 	link: 'https://smash-by-dak.pages.dev/',
	// 	img: '/works/bsmash.webp',
	// 	title: 'BSmash',
	// 	description: 'La web de Bsmash, con un menú digital propio e integración de sistema de pedido a domicilio.',
	// 	stack: ['astro', 'ts', 'css'],
	// },
	{
		link: 'https://dakburger.es/',
		img: '/works/dak.webp',
		title: 'Dak Burger',
		description: 'La web de Dak Burger. Con un menú digital propio e integración de sistema de delivery y reservas.',
		stack: ['react', 'ts', 'next', 'css'],
	},
	{
		link: 'https://domindez.github.io/pluviometria-castillodelocubin/',
		img: '/works/pluviometria.webp',
		title: 'Pluviometría Castillo',
		description: 'Una web que automatiza la recolección de datos de una estación meteorológica en Castillo de Locubín.',
		stack: ['react', 'js', 'css', 'mongo'],
	},
	{
		link: 'https://tombolator.com',
		img: '/works/tombolator.webp',
		title: 'Tombolator',
		description: 'Una plataforma para crear y jugar tómbolas. Genera tickets y reparte los premios.',
		stack: ['next', 'ts', 'react', 'mongo', 'firebase'],
	},
	{
		link: 'https://www.hotelnch.com/',
		img: '/works/nch.webp',
		title: 'Hotel NCH',
		description: 'La web del Hotel NCH. Con integración de un sistema de reservas.',
		stack: ['wordpress', 'js', 'css'],
	},
]
---

<section id='works'>
	<SectionTitle title='Mis Trabajos' />
	<h4>Algunos de mis últimos proyectos</h4>

	<div class='container'>
		{
			works.map((work, index) => (
				<article class={`work-item`}>
					<div class='img-container'>
						<Image
							class='main-img'
							height={300}
							width={500}
							src={work.img}
							alt={work.title}
							style={{ objectFit: 'cover', width: '100%', height: '100%' }}
						/>
					</div>
					<div class='info'>
						<h3>{work.title}</h3>
						{work.stack && (
							<ul class='stack-list'>
								{work.stack.map((tech) => (
									<li>
										<Image src={`/logos/${tech}.png`} alt={tech} height={200} width={500} />
									</li>
								))}
							</ul>
						)}
						<p>{work.description}</p>
						<a href={work.link} target='_blank'>
							Ir a la web!
						</a>
					</div>
				</article>
			))
		}
	</div>
	<button id='load-more' class='btn'>Mostrar más</button>
</section>

<style>
	section {
		margin: 50px 10%;
	}

	h4 {
		margin-top: -30px;
		margin-bottom: 30px;
		text-align: center;
		font-weight: 400;
		color: #333;
		font-size: 1.2em;
	}

	article {
		background-color: white;
		transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
		opacity: 0;
		transform: translateY(30px) scale(0.95);
		position: relative;
		width: 100%;
		border-radius: 15px;
		overflow: hidden;
		box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
		cursor: pointer;
	}

	article:hover {
		transform: translateY(-10px) scale(1.02);
		box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
	}

	article:hover .info {
		opacity: 1;
		z-index: 2;
		background: rgba(255, 255, 255, 0.95);
		backdrop-filter: blur(10px);
	}

	article:hover .img-container {
		opacity: 0.3;
		transform: scale(1.1);
	}

	.img-container {
		overflow: hidden;
		position: relative;
		transition: all 0.4s ease;
		padding-bottom: 100%; /* Square aspect ratio since images are square */
		height: 0;
	}

	.container {
		display: grid;
		grid-template-columns: repeat(4, 1fr);
		gap: 30px;
	}

	article.animate {
		animation: fadeInUp 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
	}

	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(30px) scale(0.95);
		}
		to {
			opacity: 1;
			transform: translateY(0) scale(1);
		}
	}

	.info {
		padding: 15px;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		z-index: -1;
		background-color: rgba(255, 255, 255, 0.9);
		opacity: 0;
		transition: all 0.4s ease;
		box-sizing: border-box;
		text-align: center;
	}

	a {
		text-decoration: none;
		color: white;
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		border: none;
		padding: 12px 25px;
		border-radius: 25px;
		font-weight: 600;
		transition: all 0.3s ease;
		box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
	}

	a:hover {
		background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
		transform: translateY(-2px);
		box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
	}

	.main-img {
		width: 100%;
		height: 100%;
		transition: all 0.4s ease;
		position: absolute;
		top: 0;
		left: 0;
		object-fit: cover;
	}

	h3 {
		font-size: 1.1em;
		margin-bottom: 10px;
		color: #333;
		font-weight: 700;
	}

	p {
		line-height: 1.4em;
		color: #666;
		margin-bottom: 15px;
		font-size: 0.85em;
	}

	.stack-list {
		display: flex;
		list-style: none;
		justify-content: center;
		flex-wrap: wrap;
		margin-bottom: 10px;
	}

	.stack-list li {
		display: flex;
		align-items: center;
		padding: 6px;
		margin: 2px;
		background: rgba(102, 126, 234, 0.1);
		border-radius: 50%;
		transition: all 0.3s ease;
	}

	.stack-list li:hover {
		background: rgba(102, 126, 234, 0.2);
		transform: scale(1.1);
	}

	.stack-list img {
		height: 25px;
		width: 25px;
		object-fit: contain;
	}

	.hidden {
		display: none;
	}

	.btn {
		display: none;
		margin: 50px auto 30px;
		padding: 15px 30px;
		border: none;
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		cursor: pointer;
		border-radius: 30px;
		font-size: 1.1em;
		color: white;
		transition: all 0.3s ease;
		box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
		font-weight: 600;
	}

	.btn:hover {
		background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
		transform: translateY(-3px);
		box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);
	}

	@media (max-width: 1200px) {
		.container {
			grid-template-columns: repeat(3, 1fr);
			gap: 25px;
		}
	}

	@media (max-width: 768px) {
		.container {
			grid-template-columns: repeat(2, 1fr);
			gap: 20px;
		}
		section {
			margin: 30px 5%;
		}
	}

	@media (max-width: 480px) {
		.container {
			grid-template-columns: 1fr;
			gap: 15px;
		}
		article {
			min-width: 300px;
		}
		section {
			margin: 20px 2%;
			padding: 20px 0;
		}
	}
</style>

<script>
	// Manejador de la animación cuando los elementos entran en vista
	document.addEventListener('DOMContentLoaded', () => {
		const articles = document.querySelectorAll('.container article')
		const loadMoreButton = document.getElementById('load-more') as HTMLButtonElement | null

		// Calcular número de columnas
		let numColumns = 4
		if (window.innerWidth <= 480) numColumns = 1
		else if (window.innerWidth <= 768) numColumns = 2
		else if (window.innerWidth <= 1200) numColumns = 3
		else numColumns = 4
		const initialShow = numColumns === 1 ? 8 : numColumns * 2

		// Aplicar hidden a los que no se muestran inicialmente
		articles.forEach((article, index) => {
			if (index >= initialShow) {
				article.classList.add('hidden')
			}
		})

		// Mostrar botón si hay ocultos
		if (loadMoreButton && articles.length > initialShow) {
			loadMoreButton.style.display = 'block'
		}

		const observer = new IntersectionObserver(
			(entries) => {
				entries.forEach((entry) => {
					if (entry.isIntersecting) {
						entry.target.classList.add('animate')
						observer.unobserve(entry.target)
					}
				})
			},
			{ threshold: 0.1 }
		)

		// Observar solo los visibles inicialmente
		const visibleArticles = document.querySelectorAll('.container article:not(.hidden)')
		visibleArticles.forEach((article) => observer.observe(article))

		// Funcionalidad del botón "Mostrar más"
		loadMoreButton?.addEventListener('click', () => {
			const hiddenArticles = document.querySelectorAll('.container article.hidden')
			let toShow = numColumns === 1 ? 3 : numColumns // en móvil 3, else una fila
			for (let i = 0; i < toShow && i < hiddenArticles.length; i++) {
				hiddenArticles[i].classList.remove('hidden')
				hiddenArticles[i].classList.add('animate')
				observer.observe(hiddenArticles[i]) // observar el nuevo visible
			}
			// Si ya no quedan artículos ocultos, se oculta el botón
			if (document.querySelectorAll('.container article.hidden').length === 0) {
				if (loadMoreButton) loadMoreButton.style.display = 'none'
			}
		})
	})
</script>
