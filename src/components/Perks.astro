---
const news = [
	{
		category: 'Diseño Web',
		headline: 'Experto en crear interfaces de usuario atractivas y funcionales',
	},
	{
		category: 'Frontend',
		headline: 'Desarrollo de páginas web interactivas y responsivas con React y Vue',
	},
	{
		category: 'Backend',
		headline: 'Construcción de servidores y APIs robustas y seguras con Node.js, Express y Next',
	},
	{
		category: 'Optimización Web',
		headline: 'Desarrollo de aplicaciones web rápidas y eficientes',
	},
]
---

<section>
	{
		news.map((item) => (
			<article>
				<p>{item.category}</p>
				<h2>{item.headline}</h2>
			</article>
		))
	}
</section>

<style>
	section {
		margin: 70px 10%;
		display: grid;
		grid-template-columns: repeat(4, 1fr);
		gap: 30px;
	}

	article {
		padding: 0;
		padding-bottom: 20px;
		background-color: white;
		border: none;
		position: relative;
		opacity: 0;
		transform: translateY(20px);
		display: flex;
		align-items: center;
		justify-content: center;
	}

	/* Cuando el article entra en vista se le añade la clase "animate" para activar la animación */
	article.animate {
		animation: fadeInUp 0.6s forwards;
	}

	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(20px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
	p {
		width: fit-content;
		padding: 5px 10px;
		background-color: #b0ddda;
		position: absolute;
		top: -10px;
		left: -10px;
	}

	h2 {
		padding: 25px 20px 10px;
		font-size: 1em;
		margin-top: 10px;
		text-wrap: pretty;
		font-weight: 400;
	}

	@media (max-width: 1000px) {
		section {
			grid-template-columns: repeat(2, 2fr);
		}
	}

	@media (max-width: 768px) {
		section {
			grid-template-columns: repeat(1, 1fr);
		}
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const articles = document.querySelectorAll('article');
		const observer = new IntersectionObserver((entries) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					entry.target.classList.add('animate');
					observer.unobserve(entry.target);
				}
			});
		}, { threshold: 0.1 });

		articles.forEach((article) => observer.observe(article));
	});
</script>